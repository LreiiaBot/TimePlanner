// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimePlannerUpdated.Default;

namespace TimePlannerUpdated.Default.Migrations
{
    [DbContext(typeof(TimeplannerContext))]
    partial class TimeplannerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TimePlannerUpdated.Default.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Deadline")
                        .HasColumnType("timestamp");

                    b.Property<bool>("Done")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOffsetReminder")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("TaskListId")
                        .HasColumnType("int");

                    b.Property<int?>("UserTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskListId");

                    b.HasIndex("UserTaskId");

                    b.ToTable("Reminder");
                });

            modelBuilder.Entity("TimePlannerUpdated.Default.TaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AutoAddDays")
                        .HasColumnType("int");

                    b.Property<int>("AutoAddHours")
                        .HasColumnType("int");

                    b.Property<int>("AutoAddMinutes")
                        .HasColumnType("int");

                    b.Property<int>("AutoAddMonths")
                        .HasColumnType("int");

                    b.Property<int>("AutoAddYears")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("AutoOffset")
                        .HasColumnType("time");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MinimalAutoRemindersCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartingTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TaskList");

                    b.HasDiscriminator();
                });

            modelBuilder.Entity("TimePlannerUpdated.Default.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AutoAddDays")
                        .HasColumnType("int");

                    b.Property<int>("AutoAddHours")
                        .HasColumnType("int");

                    b.Property<int>("AutoAddMinutes")
                        .HasColumnType("int");

                    b.Property<int>("AutoAddMonths")
                        .HasColumnType("int");

                    b.Property<int>("AutoAddYears")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("AutoOffset")
                        .HasColumnType("time");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MinimalAutoRemindersCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartingTime")
                        .HasColumnType("timestamp");

                    b.Property<int?>("TaskListId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TaskListId");

                    b.ToTable("UserTask");

                    b.HasDiscriminator();
                });

            modelBuilder.Entity("TimePlannerUpdated.Default.Reminder", b =>
                {
                    b.HasOne("TimePlannerUpdated.Default.TaskList", null)
                        .WithMany("CustomReminders")
                        .HasForeignKey("TaskListId");

                    b.HasOne("TimePlannerUpdated.Default.UserTask", null)
                        .WithMany("CustomReminders")
                        .HasForeignKey("UserTaskId");
                });

            modelBuilder.Entity("TimePlannerUpdated.Default.UserTask", b =>
                {
                    b.HasOne("TimePlannerUpdated.Default.TaskList", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TaskListId");
                });
#pragma warning restore 612, 618
        }
    }
}
